@model List<FifthGroup_front.ViewModels.ActiveApplyViewModel>
@using Newtonsoft.Json

@{
    ViewData["Title"] = "PersonalActive";
}
<!-- Header -->
<div class="container-fluid page-header py-5 fadeIn">
    <div class="container text-center py-5">
        <h1 class="display-2 text-dark mb-4 animated slideInDown">報名紀錄查詢</h1>
        <nav aria-label="breadcrumb animated slideInDown">
            <ol class="breadcrumb justify-content-center mb-0">
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Active" asp-action="ActiveList">活動報名</a></li>
                <li class="breadcrumb-item  text-dark aria-current=" page">報名紀錄查詢</li>
                <li class="breadcrumb-item"><a asp-area="" asp-controller="Active" asp-action="CheckActive">活動申請紀錄</a></li>

            </ol>
        </nav>
    </div>
</div>
<!-- Header -->
<!-- body -->
<div class="container-fluid product">
    <div class="container">
        <div class="row g-0">
            <div class="col-lg-12 py-5">
                <div class="py-5">
                    <h1 class="display-6 mb-4">已報名的活動</h1>
                    <div style="margin-bottom:10px">
                        <a asp-action="PersonalActive" asp-route-id="true" class="btn btn-primary" style="font-size:18px;margin-right:10px">活動列表</a>
                        <a asp-action="PersonalActive" asp-route-id="false" class="btn btn-primary" style="font-size:18px">歷史紀錄</a>
                    </div>
                    <div class="card custom-wide-card">
                        <div class="table-responsive text-nowrap align-content-center">
                            @await Html.PartialAsync("_PersonalPartial", Model)

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="py-5">
            <div class="container" style="border:2px solid gray;background-color:white">
                <div id="calendar"></div>
            </div>
        </div>

    </div>
</div>
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>
<script src='~/js/zh-tw.global.js'></script>


<!-- body -->

@*行事曆*@
 <script>
    async function loadAndInitCalendar() {
        try {
            // 獲得 JSON 數據
            const response = await fetch('https://data.ntpc.gov.tw/api/datasets/308dcd75-6434-45bc-a95f-584da4fed251/json?page=6&size=200');
            if (!response.ok) {
                throw new Error('讀取數據失敗');
            }

            // 解析 JSON 數據
            const data = await response.json();

            // 遍歷 JSON 數據並將資料加入數組
            const remoteEvents = data.map(function (item) {
                return {
                    title: item.chinese,
                    start: new Date(item.date),
                    allDay: true,
                    display: 'background',
                    backgroundColor: 'rgb(205,205,205)',
                    className: 'background-event',
                    groupId: 'HolidayTW',
                };
            });
    @{
        var razorEvents = new List<object>();
        var random = new Random();
        foreach (var active in Model)
        {
            var startDate = active.Application.DateStart;
            var endDate = active.Application.DateEnd;
            string Time0 = "";
            string Time1 = "";
            int red = random.Next(100, 200);
            int green = random.Next(100, 200);
            int blue = random.Next(100, 200);
            string bgColor = $"rgb({red},{green},{blue})";
            if (active.Periodoftime1 != null)
            {
                string[] timeActive = active.Periodoftime1.Split("~");
                if (timeActive.Length == 2)
                {
                    Time0 = "T" + timeActive[0] + ":00";
                    Time1 = "T" + timeActive[1] + ":00";
                }
            }

            for (var date = startDate; date <= endDate; date = date.AddDays(1))
            {
                var eventObject = new
                {
                    title = active.Application.ActivityName,
                    start = date.ToString("yyyy-MM-dd") + Time0,
                    end = date.ToString("yyyy-MM-dd") + Time1,
                    groupId = active.Application.ApplyCode,
                    url = Url.Action("ActiveApply", new { id = active.ApplyCode }),
                    backgroundColor = bgColor,
                    textColor = "black"
                };
                razorEvents.Add(eventObject);
            }
        }

                var razorEventsJson = JsonConvert.SerializeObject(razorEvents);
            }
                var razorEvents = @Html.Raw(razorEventsJson);

            var allEvents = [...razorEvents, ...remoteEvents];
            // 初始化 FullCalendar
            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'zh-tw',
                navLinks: true,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek'
                },
                //可點選新增刪除
                height: 'auto',
                navLinks: true, // can click day/week names to navigate views
                selectable: true,
                selectMirror: true,
                select: function (arg) {
                    const selectedDate = new Date(arg.start);

                    // 將日期加上8小時以得到台灣時區的時間
                    selectedDate.setHours(selectedDate.getHours() + 8);

                    // 將選擇的日期轉換為 ISO 8601 格式的字符串
                    const isoDateString = selectedDate.toISOString();

                    // 創建 URL，並將選擇的日期時間作為查詢參數傳遞
                    const url = `ActiveList?searchDate=${encodeURIComponent(isoDateString)}`;

                    window.location.href = url;
                    
                    calendar.unselect()
                },
                //eventClick: function (arg) {
                //    if (confirm('Are you sure you want to delete this event?')) {
                //        arg.event.remove()
                //    }
                //},
                editable: true,
                selectable: true,
                selectMirror: true,
                nowIndicator: true,
                //事件
                events: allEvents,


            });

            calendar.render();
        } catch (error) {
            console.error('讀取事件失敗:', error);
        }
    }


    // 頁面進來後再初始化函數，避免抓取資料還沒抓完就加載日歷
    document.addEventListener('DOMContentLoaded', function () {
        loadAndInitCalendar();
    });
</script>