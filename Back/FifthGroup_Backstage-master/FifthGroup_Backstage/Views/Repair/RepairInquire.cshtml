@model IEnumerable<FifthGroup_Backstage.Models.Repair>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "RepairInquire";
}


@* <p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Time)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProcessingStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ManufacturerCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Detail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pic)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HouseholdCodeNavigation)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProcessingStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ManufacturerCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Detail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pic)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HouseholdCodeNavigation.HouseholdCode)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.RepairCode">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.RepairCode">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.RepairCode">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> *@



 <!-- Page Header Start -->
    <div
      class="container-fluid page-header wow fadeIn"
      data-wow-delay="0.1s"
    >
      <div class="container text-center py-2">
        <h1 class="display-2 text-dark mb-4 animated slideInDown">維修服務</h1>
        <nav aria-label="breadcrumb animated slideInDown">
          <ol class="breadcrumb justify-content-center mb-0">
            <li class="breadcrumb-item">
                    <a asp-area="" asp-controller="Repair" asp-action="Create">社區維修申請</a>
                </li>
            <li class="breadcrumb-item text-dark" aria-current="page">
              社區維修資料管理
            </li>
            <!-- <li class="breadcrumb-item text-dark" aria-current="page">Products</li> -->
          </ol>
        </nav>
      </div>
    </div>
    <!-- Page Header End -->

    <!-- Products Start -->
    <div class="container-fluid product py-2">
      <div class="container mb-5">
        <div
          class="section-title text-center mx-auto wow fadeInUp"
          data-wow-delay="0.1s"
        >
          <h1 class="display-6">社區維修資料管理</h1>
        </div>

        <!-- Bootstrap Table with Header - Dark -->
       <div class="card custom-wide-card">
          <div class="table-responsive text-nowrap align-content-center">
            <table class="table">
              <thead class="table-dark">
                <tr>
                  <th>維修序號</th>
                  <th>報修日期</th>
                  <th>報修項目</th>
                  <th>處理狀態</th>
                  <th>操作</th>
                </tr>
              </thead>


              <tbody class="table-border-bottom-0">
                <tr>
                  
                      @using (Html.BeginForm("RepairInquire", "Repair", FormMethod.Get))
    {
        <td>
        <div class="d-flex align-items-center">
            <!-- 使用 Flex 布局来将内容水平居中对齐 -->
            <i class="fa-solid fa-magnifying-glass"></i>
        @Html.TextBox("txtKeyword", null, new { @class = "form-control form-date-control", placeholder = "關鍵字搜尋", @id = "searchInput" })
        @*一起提交*@
        <input type="submit" value="搜尋" class="btn btn-primary" hidden>
        </div>
        </td>

        @*搜尋日期*@
        <td>
         <div class="d-flex align-items-center">
            <label class="" for="inputName">搜尋日期</label>
            @Html.TextBox("txtKeywordDate", null, new { @class = "form-control form-date-control", type = "date", id = "datepicker" })
            <input type="submit" value="搜尋日期" class="btn btn-primary" hidden>
        </div>
        </td>

        @*篩選搜尋報修項目*@
         <td>
                    
                    <select class="form-select" name="txtKeywordItems" id="txtKeywordItems">
                        @if (ViewBag.RepairItems == null){
                            <option value="" disabled selected>搜尋報修項目</option>
                        }
                         else
                        {
                            <option value="">搜尋全部項目</option>                       
                        }

                         @if (ViewBag.RepairItems == "電梯")
                         {
                             <option value="電梯" selected>電梯</option>
                         }
                         else
                         {
                             <option value="電梯">電梯</option>                    
                         }

                         @if (ViewBag.RepairItems == "衛浴")
                         {
                             <option value="衛浴" selected>衛浴</option>
                         }
                         else
                         {
                             <option value="衛浴">衛浴</option>                
                         }

                         @if (ViewBag.RepairItems == "廚房")
                         {
                             <option value="廚房" selected>廚房</option>
                         }
                         else
                         {
                             <option value="廚房">廚房</option>                
                         }
                         
                          @if (ViewBag.RepairItems == "水電")
                         {
                             <option value="水電" selected>水電</option>
                         }
                         else
                         {
                             <option value="水電">水電</option>                
                         }
                         
                          @if (ViewBag.RepairItems == "裝修")
                         {
                             <option value="裝修" selected>裝修</option>
                         }
                         else
                         {
                             <option value="裝修">裝修</option>                
                         }

                         @if (ViewBag.RepairItems == "其它")
                         {
                             <option value="其它" selected>其它</option>
                         }
                         else
                         {
                             <option value="其它">其它</option>                
                         }
                      

                    </select>                   
                    
                    
                  </td>
                        
                    <td>
                    <select  class="form-select" name="txtKeywordState" id="txtKeywordState">

                     @if (ViewBag.RepairStatus == null){
                            <option value="" disabled selected>搜尋處理狀態</option>
                        }
                         else
                        {
                            <option value="">搜尋全部狀態</option>                       
                        }

                        @if (ViewBag.RepairStatus == "未處理")
                         {
                             <option value="未處理" selected>未處理</option>
                         }
                         else
                         {
                             <option value="未處理">未處理</option>                    
                         }

                          @if (ViewBag.RepairStatus == "處理中")
                         {
                             <option value="處理中" selected>處理中</option>
                         }
                         else
                         {
                             <option value="處理中">處理中</option>                    
                         }

                          @if (ViewBag.RepairStatus == "已完成")
                         {
                             <option value="已完成" selected>已完成</option>
                         }
                         else
                         {
                             <option value="已完成">已完成</option>                    
                         }
                </select>
                 
                   
                   
                  </td>
                  <td>
                    <button id="searchButton" class="btn btn-primary" hidden>搜尋</button>
                  </td>
}
                   

         <script>
    document.getElementById("searchButton").addEventListener("click", function() {
        var txtKeywordItems = document.getElementById("txtKeywordItems").value;
        var txtKeywordState = document.getElementById("txtKeywordState").value;

        var txtKeywordItemsForm = document.createElement("form");
        txtKeywordItemsForm.method = "post";
        txtKeywordItemsForm.style.display = "none";
        var txtKeywordItemsField = document.createElement("input");
        txtKeywordItemsField.type = "hidden";
        txtKeywordItemsField.name = "txtKeywordItems";
        txtKeywordItemsField.value = txtKeywordItems;
        txtKeywordItemsForm.appendChild(txtKeywordItemsField);
        document.body.appendChild(txtKeywordItemsForm);
        txtKeywordItemsForm.submit();

        var txtKeywordStateForm = document.createElement("form");
        txtKeywordStateForm.method = "post";
        txtKeywordStateForm.style.display = "none";
        var txtKeywordStateField = document.createElement("input");
        txtKeywordStateField.type = "hidden";
        txtKeywordStateField.name = "txtKeywordState";
        txtKeywordStateField.value = txtKeywordState;
        txtKeywordStateForm.appendChild(txtKeywordStateField);
        document.body.appendChild(txtKeywordStateForm);
        txtKeywordStateForm.submit();
    });
</script>


    <script>
    document.getElementById("submitButton").addEventListener("click", function() {
    var selectedValue = document.getElementById("txtKeywordItems").value;

    // 在这里可以使用 AJAX 请求将 selectedValue 发送到服务器

    // 或者通过表单提交将选定值发送到服务器
    });
    </script>

    <script>
    const searchInput = document.querySelector("#searchInput");

    searchInput.addEventListener("keyup", function () {
    // 获取输入框的值
           
    const keyword = searchInput.value.trim();

    // 执行搜索操作，你可以在这里编写发送搜索请求的代码
    // 可以使用 Fetch API 或其他库来发送请求，获取搜索结果并更新页面
    });
    </script>
                                  
                </tr>

                @foreach (var item in Model)
                {
                
                <tr>
                  <td class="align-middle">
                    <i
                      class="fa-solid fa-screwdriver-wrench text-danger me-3"
                    ></i>
                    <strong>
                                @Html.DisplayFor(modelItem => item.RepairCode)
                    </strong>
                  </td class="align-middle">
                  <td class="align-middle">
                                @Html.DisplayFor(modelItem => item.Time)
                  </td>
                  <td class="align-middle">
                                @Html.DisplayFor(modelItem => item.Type)
                  </td>
                  <td class="align-middle">
                    <span class="badge bg-label-primary me-1">
                               @Html.DisplayFor(modelItem => item.ProcessingStatus)
                    </span>
                  </td>
                  <td>
                      <div class="link-container">
                    @*<ol class="breadcrumb">
                      <li class="breadcrumb-item">*@                                         
                        @Html.ActionLink("修改", "Edit", new {  id=item.RepairCode  }) |                                                          
                        @Html.ActionLink("刪除", "Delete","Repair", new {  id=item.RepairCode  },
                        new {onclick="return confirm('確定要刪除嗎?')"}) |
                        @Html.ActionLink("查看詳情", "CheckTheDetails", new {  id=item.RepairCode  }) 
                    @* <a  asp-area="" asp-controller="Repair" asp-action="RepairCheckTheDetails">查看詳情</a>
                    class="badge" 原本查看詳情用的class
                    </li>                                       
                    </ol>*@  
                    </div>
                  </td>
                </tr>              
                }
              </tbody>
            </table>

 @*每10筆資料一頁頁碼資料*@
 <div class="d-flex justify-content-center">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item">
                @{
                    // 计算前一页的页码，确保不小于 1
                    int prevPageNumber = ViewBag.RepairPage.PageNumber - 1;
                    if (prevPageNumber < 1)
                    {
                        prevPageNumber = 1;
                    }
                }
                <a class="page-link" href="@Url.Action("RepairInquire", new { Page = prevPageNumber })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (int i = 1; i <= ViewBag.RepairPage.PageCount; i++)
            {
                <li class="page-item @(i == ViewBag.RepairPage.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("RepairInquire", new { Page = i })">@i</a>
                </li>
            }
            <li class="page-item">
                @{
                    // 计算下一页的页码，确保不超过最大页数
                    int nextPageNumber = ViewBag.RepairPage.PageNumber + 1;
                    if (nextPageNumber > ViewBag.RepairPage.PageCount)
                    {
                        nextPageNumber = ViewBag.RepairPage.PageCount;
                    }
                }
                <a class="page-link" href="@Url.Action("RepairInquire", new { Page = nextPageNumber })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
@*\\每10筆資料一頁頁碼資料*@

@*每10筆資料一頁頁碼資料*@
@* <div class="pagination">
    @Html.PagedListPager((IPagedList)ViewBag.RepairPage, page => Url.Action("RepairInquire", new { Page = page }))
</div>*@

          </div>
        </div>
        <!--/ Bootstrap Table with Header Dark -->
    @*@section Scripts {*@
   
@*}*@

<script>
    @*// 获取日期输入框和隐藏的提交按钮*@
    const dateInput = document.getElementById('datepicker');
    const submitButton = document.querySelector('input[type="submit"]');

    @*// 监听日期输入框的值改变事件*@
    dateInput.addEventListener('change', function () {
       @* // 自动点击隐藏的提交按钮*@
        submitButton.click();
    });
</script>
      
    <script>
        // 处理搜索操作的函数
        function performSearch() {
            // 您可以在这里访问所选值和文本输入的值
            var txtKeywordItems = document.getElementById("txtKeywordItems").value;
            var txtKeywordState = document.getElementById("txtKeywordState").value;
            var searchInputValue = document.getElementById("searchInput").value.trim();

            // 您可以在这里执行任何所需的操作，如AJAX请求或表单提交
            // 在这个示例中，我们只会触发搜索按钮的点击事件
            document.getElementById("searchButton").click();
        }

        // 为这些元素添加事件监听器
        document.getElementById("searchInput").addEventListener("blur", performSearch);

        document.getElementById("txtKeywordItems").addEventListener("change", performSearch);

        document.getElementById("txtKeywordState").addEventListener("change", performSearch);

        // 为搜索按钮添加事件监听器
        document.getElementById("searchButton").addEventListener("click", function () {
            performSearch(); // 为了一致性，您可以在此处调用相同的函数
        });
    </script>

      </div>
    </d>
    <!-- Products End -->
    </div>
